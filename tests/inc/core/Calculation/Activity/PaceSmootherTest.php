<?php

namespace Runalyze\Calculation\Activity;

use Runalyze\Model\Trackdata\Object;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2015-01-21 at 09:17:29.
 */
class PaceSmootherTest extends \PHPUnit_Framework_TestCase {

	public function testSimpleStepSmoothing() {
		$Smoother = new PaceSmoother(new Object(array(
			Object::TIME => array(0, 7, 16, 20, 24, 25, 30, 40, 60, 66),
			Object::DISTANCE => array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
		)), false);

		$this->assertEquals(array(
			8, 4, 3, 15 //, 6 - the last one will be ignored for MODE_STEP
		), $Smoother->smooth(2, PaceSmoother::MODE_STEP));
	}

	public function testKeepingArraySize() {
		$Smoother = new PaceSmoother(new Object(array(
			Object::TIME => array(0, 7, 16, 20, 24, 25, 30, 40, 60, 66),
			Object::DISTANCE => array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
		)), true);

		$this->assertEquals(array(
			8, 8, 4, 4, 3, 3, 15, 15, 6
		), $Smoother->smooth(2, PaceSmoother::MODE_STEP));
	}

	public function testSmoothingByDistance() {
		$Smoother = new PaceSmoother(new Object(array(
			Object::TIME => array(0, 7, 16, 20, 24, 25, 30, 40, 60, 66),
			Object::DISTANCE => array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
		)), false);

		$this->assertEquals(array(
			8, 4, 3, 15, 6
		), $Smoother->smooth(2, PaceSmoother::MODE_DISTANCE));
	}

	public function testSmoothingByTime() {
		$Smoother = new PaceSmoother(new Object(array(
			Object::TIME => array(0, 7, 16, 20, 24, 25, 30, 40, 60, 66),
			Object::DISTANCE => array(0, 1, 2, 3, 4, 5, 6, 7, 8, 9)
		)), false);

		$this->assertEquals(array(
			round(20/3), 20/4, 20/1, 6/1
		), $Smoother->smooth(18, PaceSmoother::MODE_TIME));
	}

}
