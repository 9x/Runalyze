<?php

namespace Runalyze\Activity;

use Runalyze\Configuration;

use DB;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2015-01-15 at 13:54:02.
 */
class PersonalBestTest extends \PHPUnit_Framework_TestCase {

	/**
	 * @var \PDO
	 */
	protected $PDO;

	protected function setUp() {
		PersonalBest::deactivateStaticCache();

		$this->PDO = DB::getInstance();
	}

	protected function tearDown() {
		$this->PDO->exec('TRUNCATE `'.PREFIX.'training`');
	}

	protected function insert($dist, $s, $time = 0) {
		$this->PDO->exec(
			'INSERT INTO `'.PREFIX.'training` (`distance`, `s`, `time`, `typeid`) '.
			'VALUES ('.$dist.', '.$s.', '.$time.', '.Configuration::General()->competitionType().')'
		);
	}

	public function testAutoLookup() {
		$this->insert(1, 200);

		$AutoLookup = new PersonalBest(1, $this->PDO, true);
		$NoLookup = new PersonalBest(1, $this->PDO, false);

		$this->assertTrue($AutoLookup->exists());
		$this->assertFalse($NoLookup->exists());

		$this->insert(1, 180);
		$this->assertEquals(200, $AutoLookup->seconds());
		$this->assertEquals(180, $NoLookup->lookup()->seconds());
	}

	public function testStaticCache() {
		$this->insert(1, 200);

		PersonalBest::activateStaticCache();

		$PB = new PersonalBest(1, $this->PDO, true);
		$this->assertEquals(200, $PB->seconds());

		$this->insert(1, 180);
		$this->assertEquals(200, $PB->lookup()->seconds());

		PersonalBest::deactivateStaticCache();

		$this->assertEquals(180, $PB->lookup()->seconds());
	}

	public function testDetails() {
		$this->insert(1, 200, mktime(0,0,0,1,1,2010));

		$PB = new PersonalBest(1, $this->PDO, false);
		$PB->lookupWithDetails();

		$this->assertTrue($PB->knowsActivity());
		$this->assertGreaterThan(0, $PB->activityId());
		$this->assertEquals(mktime(0,0,0,1,1,2010), $PB->timestamp());
	}

}
