<?php
class ConfigurationGeneral_MockTester extends ConfigurationCategory {
	protected function key() { return 'mock-tester'; }
	public function title() { return 'mock-tester'; }
	protected function createValues() {
		$this->createValue(new ConfigurationValueInt('TEST', array(
			'default'		=> 42
		)));
		$this->createValue(new ConfigurationValueInt('SECOND', array()));
	}
	public function test() {
		return $this->get('TEST');
	}
}

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2014-09-05 at 14:12:20.
 */
class ConfigurationCategoryTest extends PHPUnit_Framework_TestCase {

	/**
	 * @var ConfigurationGeneral_MockTester
	 */
	protected $object;

	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp() {
		$this->object = new ConfigurationGeneral_MockTester();
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown() {
		
	}

	public function testAccess() {
		$this->assertEquals( 42, $this->object->test() );
	}

	public function testKeys() {
		$this->assertEquals( array('TEST', 'SECOND'), $this->object->keys() );
	}

	/**
	 * @covers ConfigurationCategory::updateFromPost
	 */
	public function testUpdateFromPost() {
		$this->object->updateFromPost();
		$this->assertEquals( 42, $this->object->test() );

		$_POST['TEST'] = 21;
		$this->object->updateFromPost();
		$this->assertEquals(21, $this->object->test());

		unset($_POST['TEST']);
	}

	/**
	 * @covers ConfigurationCategory::setUserID
	 * @todo   Implement testSetUserID().
	 */
	public function testSetUserID() {
		// Requires userID and database
	}

	/**
	 * @covers ConfigurationCategory::updateValue
	 * @todo   Implement testUpdateValue().
	 */
	public function testUpdateValue() {
		// Requires userID and database
	}

}
